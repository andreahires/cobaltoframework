package com.cobalto.loading{
	import flash.events.Event;
	import flash.events.EventDispatcher;
	import flash.events.IOErrorEvent;
	import flash.events.ProgressEvent;
	import flash.net.URLLoader;
	import flash.net.URLLoaderDataFormat;
	import flash.net.URLRequest;
			public class XmlLoader extends EventDispatcher	{				public static const XML_AVAILABLE:String='xmlAvailable';		public static const XML_PROGRESS:String='xmlProgress';		protected var _textData:String;		protected var _urlLoader:URLLoader;		protected var _urlRequest:URLRequest;		protected var _url:String;				public function XmlLoader(pDataUrl:String)		{						super();			_url = pDataUrl;			setURLLoader();			setURLRequest(pDataUrl)			activateListeners();			loadData();					}				protected function setURLLoader():void		{						_urlLoader=new URLLoader();			_urlLoader.dataFormat=URLLoaderDataFormat.TEXT;					}				protected function setURLRequest(pDataUrl:String):void		{						_urlRequest=new URLRequest(pDataUrl);					}				protected function activateListeners():void		{			_urlLoader.addEventListener(ProgressEvent.PROGRESS, progressHandler);			_urlLoader.addEventListener(Event.COMPLETE,onComplete);			_urlLoader.addEventListener(IOErrorEvent.IO_ERROR,onIoError);					}				protected function removeListeners():void		{						_urlLoader.removeEventListener(Event.COMPLETE,onComplete);			_urlLoader.removeEventListener(IOErrorEvent.IO_ERROR,onIoError);					}				protected function loadData():void		{						_urlLoader.load(_urlRequest);					}				protected function progressHandler(e:ProgressEvent):void		{			var percent:Number = e.bytesLoaded * 100 / e.bytesTotal;						dispatchEvent(new Event(XML_PROGRESS));					}				protected function onComplete(e:Event):void		{						removeListeners();			_textData=_urlLoader.data.split('ß').join('&#223;');						/*			trace(e.bubbles)			trace(e.cancelable)			trace(e.currentTarget)			trace(e.target)			*/						dispatchEvent(new Event(XML_AVAILABLE));		}				protected function onIoError(e:Event):void		{						trace("XMLLoader Error: The file doesn't exist: "+_url);					}				public function get textData():String		{						return(_textData);					}				public function unload():void		{			_urlLoader.close();		}	}}
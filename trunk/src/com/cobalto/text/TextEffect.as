package com.cobalto.text{		import flash.text.*;	import flash.display.*;		import gs.*;	import com.greensock.easing.*;		public class TextEffect extends TextBuilder	{				private var _currentTweener:TweenMax;				private var _finalString:String;		private var _finalStringLength:int;		private var _currentString:String;				private var _selectedCharPartition:int;		private var _randomCharPartition:int;		private var _finalPartition:int;				private var _selectedChar:String = '-';		private var _alternativeChar:String;		private var _randomCharSet:String = '1234567890+#@&%/$£"!^?=*°{}[]()_';				private var _selectedCharString:String;		private var _emptyCharString:String;		private var _randomCharArr:Array;		private var _randomGlobalIndex:Array;		private var _randomFinalStringIndex:Array;		private var _effect:String;				public var currentTime:Number;				public static const EASE_EFFECT:String = 'EaseEffect';		public static const RANDOM_EFFECT:String = 'RandomEffect';		public static const RANDOM_LOCK_EFFECT:String = 'RandomLockEffect';				public function TextEffect(textString:String, width:int = 0)		{						super(textString, width);						visible = false;						_finalString = textString;			_finalStringLength = _finalString.length;						effect = EASE_EFFECT;						setCharArray();			setRandomGlobalIndex();			setRandomFinalStringIndex();					}				private function setCharArray():void		{						_randomCharArr = new Array();						var selectedCharArray:Array = new Array();			var emptyCharArray:Array = new Array();						for(var i:int = 0; i < _finalStringLength; i++)			{								var randomChar:String;				if(!_alternativeChar)randomChar = _randomCharSet.charAt(Math.round(Math.random()*_randomCharSet.length - 1));				else randomChar = _alternativeChar;				_randomCharArr.push(randomChar);								if(_finalString.split('')[i] != ' ')selectedCharArray.push(_selectedChar);				else selectedCharArray.push(' ');				emptyCharArray.push(' ');							}						_selectedCharString = selectedCharArray.join('');			_emptyCharString = emptyCharArray.join('');					}				private function setRandomPartitionIndex(length:int):Array		{						var randomIndexArr:Array = new Array();						for(var i:int = 0; i < length; i++)			{								randomIndexArr.push(i);							}						return randomIndexArr.sort(shuffle);					}				private function setRandomGlobalIndex():void		{						_randomGlobalIndex = setRandomPartitionIndex(_finalStringLength);					}				private function setRandomFinalStringIndex():void		{						_randomFinalStringIndex = setRandomPartitionIndex(_finalStringLength);					}				private function updateString():void		{						if(visible == false) visible = true;						_selectedCharPartition = Math.floor(currentTime*_finalStringLength)/1;						if(_effect == EASE_EFFECT) modifyEaseString();			if(_effect == RANDOM_EFFECT || _effect == RANDOM_LOCK_EFFECT) modifyRandomString();					}				private function modifyEaseString():void		{						_currentString = _finalString.substr(0, _selectedCharPartition);						super.setText(_currentString);					}				private function modifyRandomString():void		{						if(_effect == RANDOM_EFFECT)var randomPartitionIndex:Array = setRandomPartitionIndex(_selectedCharString.substr(0, _selectedCharPartition).split('').length);						_randomCharPartition = Math.floor((_selectedCharPartition*_selectedCharPartition)/_finalStringLength);			_finalPartition = Math.floor((_randomCharPartition*_randomCharPartition)/_finalStringLength);						var diffPartitionValue:int = _finalStringLength - _selectedCharPartition;			var stringRef:String = _selectedCharString.substr(0, _selectedCharPartition) + _emptyCharString.substr(0, diffPartitionValue);			var _subSelectedCharString:Array = stringRef.split('');						for(var i:Number = 0; i < _randomCharPartition; i++)			{								var randomChar:String;				if(!_alternativeChar)randomChar = _randomCharArr.sort(shuffle)[i];				else randomChar = _alternativeChar;								if(_finalString.split('')[_randomGlobalIndex[i]] != ' ') _subSelectedCharString[_randomGlobalIndex[i]] = randomChar;							}						for(var k:Number = 0; k < _finalPartition; k++)			{								var finalChar:String;								if(_effect == RANDOM_LOCK_EFFECT)				{										finalChar = _finalString.split('')[_randomFinalStringIndex[k]];					if(_finalString.split('')[_randomFinalStringIndex[k]] != ' ') _subSelectedCharString[_randomFinalStringIndex[k]] = finalChar;									}				else if(_effect == RANDOM_EFFECT)				{										finalChar = _finalString.split('')[randomPartitionIndex[k]];					if(_finalString.split('')[randomPartitionIndex[k]] != ' ') _subSelectedCharString[randomPartitionIndex[k]] = finalChar;									}							}						_currentString = _subSelectedCharString.join('');						super.setText(_currentString);					}				private function updateStringOut():void		{						_selectedCharPartition = Math.floor(((1 - currentTime)*_finalStringLength)/1);						modifyEaseStringOut();					}				private function modifyEaseStringOut():void		{						_currentString = _finalString.substr(0, _selectedCharPartition);						super.setText(_currentString);					}				private function shuffle(a:int,b:int):int		{						var num:Number = Math.round(Math.random()*2)-1;			return num;					}				public function setInitChar($char:String):void		{						_selectedChar = $char;			setCharArray();					}				public function setAlternativeChar($char:String):void		{						_alternativeChar = $char;			setCharArray();					}				public function set effect(value:String):void		{						_effect = value;					}				public function setString(textString:String):void		{						init(textString);						visible = false;						_finalString = textString;			_finalStringLength = _finalString.length;						setCharArray();			setRandomGlobalIndex();			setRandomFinalStringIndex();					}				public function start(time:Number, $vars:Object):void		{						$vars.currentTime = 1;			$vars.onUpdate = updateString as Function;						currentTime = 0;			_currentTweener = new TweenMax(this, time, $vars);					}				public function hide(time:Number, $vars:Object):void		{						$vars.currentTime = 1;			$vars.onUpdate = updateStringOut as Function;						currentTime = 0;			_currentTweener = new TweenMax(this, time, $vars);					}			}	}
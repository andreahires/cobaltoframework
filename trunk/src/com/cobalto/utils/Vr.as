package com.cobalto.utils{		import flash.display.*;	import flash.events.Event;	import flash.events.EventDispatcher;		import com.greensock.TweenLite;	import com.greensock.easing.Expo;
				public class Vr extends EventDispatcher	{				private var friction:Number;		private var clip:DisplayObject;		private var propX:Number;		private var propY:Number;		private var offsetX:Number;		private var offsetY:Number;		private var _time:Number;		public var container:DisplayObject;										public var destinationX:Number=undefined;		public var destinationY:Number=undefined;				public static const OVER_CLIP:String = "OverClip";		public static const OUT_CLIP:String = "OutClip"; 								//public var clipCentered:Boolean;				public function Vr(clip:DisplayObject,friction:Number)		{			this.clip = clip;			this.friction = friction;				}			    public function animateEmpty(container:DisplayObject,maxX:Number,maxY:Number):void		{			var differenceWidth:Number= clip.width-maxX;						var differenceHeight:Number= clip.height-maxY;			var percentualeOriginaleW:Number;			var percentualeOriginaleH:Number;			if(container.mouseX>0 && container.mouseX<maxX)			{				if(container.mouseY>0 && container.mouseY<maxY)				{    										dispatchEvent(new Event(OVER_CLIP,true));																percentualeOriginaleW=container.mouseX/(maxX+container.x);					percentualeOriginaleH=container.mouseY/(maxY+container.y);				    													destinationX = -(differenceWidth*percentualeOriginaleW);					destinationY = -(differenceHeight*percentualeOriginaleH);													}else				{					dispatchEvent(new Event(OUT_CLIP,true));										percentualeOriginaleW=0.5;					percentualeOriginaleH=0.5;			    													destinationX = -(differenceWidth*percentualeOriginaleW);					destinationY = -(differenceHeight*percentualeOriginaleH);									}			}else			{				dispatchEvent(new Event(OUT_CLIP,true));									percentualeOriginaleW=0.5;				percentualeOriginaleH=0.5;			    												destinationX = -(differenceWidth*percentualeOriginaleW);				destinationY = -(differenceHeight*percentualeOriginaleH);				}						var ax:Number = (destinationX - clip.x) * friction;			var ay:Number = (destinationY - clip.y) * friction;			clip.x += ax;			clip.y += ay;		}											public function animate(container:DisplayObject,altezza:Number,larghezza:Number):void		{						/* var x:Number = container.mouseX;			   var y:Number = container.mouseY;									   propX = x / larghezza;			   propY = y / altezza;						   offsetX = clip.width - larghezza;			   offsetY = clip.height - altezza;						   var destinationX:Number = (offsetX * propX);			   var destinationY:Number = (offsetY * propY);						   trace("destinationX"+destinationX);			   trace("destinationY"+destinationY)									   var ax:Number = (destinationX - clip.x) * friction;			   var ay:Number = (destinationY - clip.y) * friction;						   clip.x += ax;			 clip.y += (ay); */															var x:Number = container.mouseX;			var y:Number = container.mouseY;									propX = x / larghezza;			propY = y / altezza;						offsetX = clip.width - larghezza;			offsetY = clip.height - altezza;						var destinationX:Number = (offsetX * propX);			var destinationY:Number = (offsetY * propY);											var ax:Number = (destinationX - clip.x) * friction;			var ay:Number = (destinationY - clip.y) * friction;						clip.x += ax;			clip.y += ay;				}				public function animate2(container:DisplayObject,altezza:Number,larghezza:Number):void		{						var x:Number = container.mouseX;			var y:Number = container.mouseY;			propX = x / larghezza;			propY = y / altezza;			offsetX = clip.width - larghezza;			offsetY = clip.height - altezza;			var destinationX:Number = -(offsetX * propX)			var destinationY:Number = -(offsetY * propY)			var ax:Number = (destinationX - clip.x) * friction;			var ay:Number = (destinationY - clip.y) * friction;						clip.x += ax;			clip.y += ay;				}				public function animateXAxis(containerWidth:Number,contentWidth:Number,coordX:Number):void		{						var x:Number = coordX;						if(x < 0)			{				x = 0;			}			else if(x > containerWidth)			{				x = containerWidth;			}			propX = x / containerWidth;						offsetX = contentWidth - containerWidth;						var destinationX:Number = -(offsetX * propX)						var ax:Number = (destinationX - clip.x) * friction;						clip.x += ax;				}				public function animateWithoutFriction(container:DisplayObject,altezza:Number,larghezza:Number):Number		{			//var x:Number = container.mouseX;						var y:Number = container.mouseY;						//propX = x / larghezza;			propY = y / altezza;			//offsetX = clip.width - larghezza;			offsetY = clip.height - altezza;			//var destinationX:Number = -(offsetX * propX);			var destinationY:Number = -(offsetY * propY);			//clip.x = destinationX;			//clip.y = destinationY;						return destinationY;		}				/* 	public function animateWithoutFriction(container:DisplayObject,altezza:Number,larghezza:Number):void		   {		   var x:Number = container.mouseX;				   var y:Number = container.mouseY;				   propX = x / larghezza;		   propY = y / altezza;		   offsetX = clip.width - larghezza;		   offsetY = clip.height - altezza;		   var destinationX:Number = -(offsetX * propX);		   var destinationY:Number = -(offsetY * propY);		   clip.x = destinationX;		   clip.y = destinationY;		 } */				public function animateTweenLite(container:DisplayObject,altezza:Number,larghezza:Number,time:Number):void		{			//var x:Number = container.mouseX;			var y:Number = container.mouseY;			//propX = x / larghezza;			propY = y / altezza;			//offsetX = clip.width - larghezza;			offsetY = clip.height - altezza;			//var destinationX:Number = -(offsetX * propX);			var destinationY:Number = -(offsetY * propY);			//clip.x = destinationX;						_time = time;						TweenLite.to(clip,_time,{y:destinationY,ease:Expo.easeOut});				}				public function animateCentered(container:DisplayObject,altezza:Number,larghezza:Number):void		{						var x:Number = container.mouseX;			var y:Number = container.mouseY;			propX = x / larghezza;			propY = y / altezza;			offsetX = clip.width - larghezza;			offsetY = clip.height - altezza;			var destinationX:Number = -((offsetX * propX) - clip.width / 2);			var destinationY:Number = -((offsetY * propY) - clip.height / 2);			var ax:Number = (destinationX - clip.x) * friction;			var ay:Number = (destinationY - clip.y) * friction;						clip.x += ax;			clip.y += ay;				}	}}